apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "elasticsearch.fullname" . }}-post-installs-script
  namespace: {{ .Values.namespace }}
data:
  post-installs.sh: |
    #!/bin/bash
    # Post install initialization jobs
    
    set -e 
    sleep 30s
    
    ## Template Job
    
    # Wait for Elasticsearch to start
    echo "Waiting for Elasticsearch to start..."
    ESSTATUS=""
    until [ "$ESSTATUS" == "green" ] || [ "$ESSTATUS" == "yellow" ]; do
      ESSTATUS=$(curl -X GET --silent "data-service:9200/_cluster/health?wait_for_status=green" | jq --raw-output '.status')
    done
    
    # Check to see if the template exists
    echo "Checking to see if template exists..."
    TEMPLATESTATUS=$(curl -X GET --silent "data-service:9200/_template/index_settings")
    
    # If not, create the template
    if [ "$TEMPLATESTATUS" == "{}" ]
    then
      echo "Index settings template not found, creating..."
      curl --silent -X PUT "data-service:9200/_template/index_settings" -H 'Content-Type: application/json' -d'
      {
        "index_patterns" : ["*"],
        "settings": {
          "number_of_shards" : {{ .Values.elasticsearchConfig.index.number_of_shards }},
          "auto_expand_replicas" : {{ .Values.elasticsearchConfig.index.auto_expand_replicas | quote }}
        }
      }
      '
      echo
    else
      {{- if .Values.snapshotConfig.enabled }}
      echo "Index settings template already exists, skipping..."
      {{- else }}
      echo "Index settings template already exists, nothing to do."
      exit
      {{- end }}
    fi
    
    {{- if .Values.snapshotConfig.enabled }}
    ## Snapshot job
    
    # Check to see if the index exists
    echo "Checking to see if Snapshot index exists..."
    INDEXSTATUS=$(curl -X --head --silent "data-service:9200/_snapshot/es_6x_snapshots" | jq --raw-output '.status')

    # If not, create the index
    if [ "$INDEXSTATUS" == "404" ]
    then
      echo "Snapshot index not found, creating..."
      curl --silent -X PUT "data-service:9200/_snapshot/es_6x_snapshots" -H 'Content-Type: application/json' -d'
      {
        "type": "fs",
        "settings": {
          "location": "/var/EDCOP/snapshots",
          "compress": true
        }
      }
      '
      echo
    else
      echo "Snapshot index already exists, nothing to do."
      exit
    fi
    {{- end }}
     
    echo "Initialization checks completed, exiting..."
    
---
{{- if .Values.snapshotConfig.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "elasticsearch.fullname" . }}-snapshot-script
  namespace: {{ .Values.namespace }}
data:
  snapshot.sh: |
    #!/bin/bash
    # Script to create Elasticsearch snapshots

    # Check to make sure Elasticsearch is alive
    echo "Checking to see if Elasticsearch is started..."
    ESSTATUS=""
    until [ "$ESSTATUS" == "green" ] || [ "$ESSTATUS" == "yellow" ]; do
      ESSTATUS=$(curl -X --head --silent "data-service:9200/_cluster/health?wait_for_status=green" | jq --raw-output '.status')
    done

    # Getting date
    DATE=`date +%m-%d-%Y`
    DATE="${DATE//-/_}"
    
    # Take snapshots
    echo "Connected to Elasticsearch, taking snapshot snapshot_$DATE..."
    curl --silent -X PUT "data-service:9200/_snapshot/es_6x_snapshots/snapshot_$DATE?wait_for_completion=true"
    

{{- end }}
    